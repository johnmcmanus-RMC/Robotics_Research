{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_looks_set_font\" id=\"P##x1Fgkv;5/Z4=6}I.B\"><field name=\"FONT\">mono30</field><next><block type=\"v5_looks_set_pen_color\" id=\"K8q4?VJC!{ofOmq6[Nur\"><field name=\"COLOR\">red</field><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_print\" id=\"gQRXLb8G`{0Usl,q4EH6\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"7[ASfP(l_WceUBo-z=7U\"><field name=\"TEXT\">Exterminate!!</field></shadow></value><next><block type=\"v5_control_wait\" id=\"H*yDBNWO7ul~+F$[PoGk\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"9[,xQUP-4,ctMB`-a|pC\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"v5_looks_clear_all_rows\" id=\"d}g!5Ul|b]Nb`?{F`x~9\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_set_width\" id=\"UbR.?[S`tF7:3GrQGBU?\"><value name=\"WIDTH\"><shadow type=\"math_whole_number\" id=\"y@Fn|.;(suEEP,RLI/26\"><field name=\"NUM\">10</field></shadow></value><next><block type=\"v5_looks_set_pen_color\" id=\".=Gb39(l-}vctCB%`EO/\"><field name=\"COLOR\">green</field><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_draw_rectangle\" id=\"[YVA*pCngiUL/0PYs]+S\"><value name=\"X\"><shadow type=\"math_whole_number\" id=\"blv]P|g^G-ID(~))O]a=\"><field name=\"NUM\">10</field></shadow></value><value name=\"Y\"><shadow type=\"math_whole_number\" id=\"{air`}ItL*B}Pc*S_Xnp\"><field name=\"NUM\">10</field></shadow></value><value name=\"WIDTH\"><shadow type=\"math_whole_number\" id=\"%/Ez0;TX*0e#!@hW`tt.\"><field name=\"NUM\">100</field></shadow></value><value name=\"HEIGHT\"><shadow type=\"math_whole_number\" id=\"/a!2gJIWh`ij.pesu1KL\"><field name=\"NUM\">100</field></shadow></value><next><block type=\"v5_control_wait\" id=\"W@cm=0#KT-aw{R.S#P|N\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"wILylv+]F.5:NR#lf)fd\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"v5_control_stop_project\" id=\"cLN.rgRA!B9gbq;?|n^v\"></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.5","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\n\n\n\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  Brain.Screen.setFont(mono30);\n  Brain.Screen.setPenColor(red);\n  Brain.Screen.print(\"Exterminate!!\");\n  wait(5.0, seconds);\n  Brain.Screen.clearScreen();\n  Brain.Screen.setPenWidth(10);\n  Brain.Screen.setPenColor(green);\n  Brain.Screen.drawRectangle(10, 10, 100, 100);\n  wait(5.0, seconds);\n  vexSystemExitRequest();\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}