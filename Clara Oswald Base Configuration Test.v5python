{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_drive_smart = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT10, GearSetting.RATIO_18_1, True)\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 319.19, 29, 165, MM, 1)\nDistance = Distance(Ports.PORT20)\nLeftRear = Bumper(brain.three_wire_port.a)\nRightRear = Bumper(brain.three_wire_port.b)\nRightFront = Bumper(brain.three_wire_port.g)\nLeftFront = Bumper(brain.three_wire_port.h)\n# vex-vision-config:begin\nvision_9__RED_BALL = Signature(1, 7835, 8897, 8366,-1415, -627, -1021,9.3, 0)\nvision_9__YELLOW_BALL = Signature(2, -1633, -821, -1227,-5353, -4651, -5002,4.2, 0)\nvision_9__SIG_3 = Signature(3, -51, 51, 0,-51, 51, 0,2.5, 0)\nvision_9 = Vision(Ports.PORT9, 30, vision_9__RED_BALL, vision_9__YELLOW_BALL, vision_9__SIG_3)\n# vex-vision-config:end\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\nvexcode_brain_precision = 0\nvexcode_console_precision = 0\nvexcode_vision_9_objects = None\nStart = Event()\nComplete = Event()\nmessage1 = Event()\nmyVariable = 0\nClickCount = 0\nWidthOfBall = 0\n\ndef when_started1():\n    global Start, Complete, message1, myVariable, ClickCount, WidthOfBall, vexcode_brain_precision, vexcode_console_precision, vexcode_vision_9_objects\n    # Initialize Drivetrain\n    brain.screen.set_font(FontType.MONO30)\n    brain.screen.set_pen_color(Color.RED)\n    drivetrain.set_stopping(BRAKE)\n    drivetrain.set_drive_velocity(30, PERCENT)\n    drivetrain.set_turn_velocity(25, PERCENT)\n    drivetrain.stop()\n    brain.screen.print(\"Drivetrain Initialized\")\n    brain.screen.next_row()\n    brain.screen.print(\"distance to nearest object is :\")\n    brain.screen.print(Distance.object_distance(MM), precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n    brain.screen.next_row()\n    Start.broadcast()\n    vexcode_vision_9_objects = vision_9.take_snapshot(vision_9__RED_BALL)\n    while not (vexcode_vision_9_objects and len(vexcode_vision_9_objects) > 0):\n        drivetrain.drive(FORWARD)\n        vexcode_vision_9_objects = vision_9.take_snapshot(vision_9__RED_BALL)\n        wait(5, MSEC)\n    drivetrain.stop()\n\n    brain.screen.clear_screen()\n\n    brain.screen.print(\"Object ID: \", vision_9.largest_object().id)\n    brain.screen.next_row()\n    \n    brain.screen.print(\"Center X: \", vision_9.largest_object().centerX)\n    brain.screen.next_row()\n\n    brain.screen.print(\"Center Y: \", vision_9.largest_object().centerY)\n    brain.screen.next_row()\n\n    brain.screen.print(\"Width \", vision_9.largest_object().width)\n    brain.screen.next_row()\n\n    brain.screen.print(\"Heigth: \", vision_9.largest_object().height)\n    brain.screen.next_row()\n\n    brain.screen.print(\"Angle: \", vision_9.largest_object().angle)\n    brain.screen.next_row()\n\n    brain.screen.print(\"Distance %.2f\" % Distance.object_distance(MM))\n    wait(5, SECONDS)\n    Complete.broadcast()\n\ndef onevent_LeftRear_pressed_0():\n    global Start, Complete, message1, myVariable, ClickCount, WidthOfBall, vexcode_brain_precision, vexcode_console_precision, vexcode_vision_9_objects\n    ClickCount = ClickCount + 1\n    brain.screen.print(\"Left Rear pressed: \")\n    brain.screen.print(ClickCount, precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n    brain.screen.next_row()\n\ndef onevent_Start_0():\n    global Start, Complete, message1, myVariable, ClickCount, WidthOfBall, vexcode_brain_precision, vexcode_console_precision, vexcode_vision_9_objects\n    ClickCount = 0\n    while not ClickCount == 4:\n        wait(5, MSEC)\n    wait(2, SECONDS)\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n    Complete.broadcast()\n\ndef onevent_RightRear_pressed_0():\n    global Start, Complete, message1, myVariable, ClickCount, WidthOfBall, vexcode_brain_precision, vexcode_console_precision, vexcode_vision_9_objects\n    ClickCount = ClickCount + 1\n    brain.screen.print(\"Righr rear pressed: \")\n    brain.screen.print(ClickCount, precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n    brain.screen.next_row()\n\ndef onevent_RightFront_pressed_0():\n    global Start, Complete, message1, myVariable, ClickCount, WidthOfBall, vexcode_brain_precision, vexcode_console_precision, vexcode_vision_9_objects\n    ClickCount = ClickCount + 1\n    brain.screen.print(\"Right Front pressed: \")\n    brain.screen.print(ClickCount, precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n    brain.screen.next_row()\n\ndef onevent_Complete_0():\n    global Start, Complete, message1, myVariable, ClickCount, WidthOfBall, vexcode_brain_precision, vexcode_console_precision, vexcode_vision_9_objects\n    brain.screen.set_pen_color(Color.GREEN)\n    brain.screen.print(ClickCount, precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n    brain.screen.next_row()\n    brain.screen.print(\"Program Complete\")\n    wait(3, SECONDS)\n    # stop project not currently supported\n\ndef onevent_LeftFront_pressed_0():\n    global Start, Complete, message1, myVariable, ClickCount, WidthOfBall, vexcode_brain_precision, vexcode_console_precision, vexcode_vision_9_objects\n    ClickCount = ClickCount + 1\n    brain.screen.print(\"Left Front pressed: \")\n    brain.screen.print(ClickCount, precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n    brain.screen.next_row()\n\n# system event handlers\nLeftRear.pressed(onevent_LeftRear_pressed_0)\nStart(onevent_Start_0)\nRightRear.pressed(onevent_RightRear_pressed_0)\nRightFront.pressed(onevent_RightFront_pressed_0)\nComplete(onevent_Complete_0)\nLeftFront.pressed(onevent_LeftFront_pressed_0)\n# add 15ms delay to make sure events are registered correctly.\nwait(15, MSEC)\n\nwhen_started1()\n","textLanguage":"python","rconfig":[{"port":[1,10,0],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"29","unit":"mm","wheelbase":"165","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[20],"name":"Distance","customName":true,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22},{"port":[1],"name":"LeftRear","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[2],"name":"RightRear","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[7],"name":"RightFront","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[8],"name":"LeftFront","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[9],"name":"vision_9","customName":false,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":30,\"signatures\":[{\"name\":\"RED_BALL\",\"parameters\":{\"uMin\":7835,\"uMax\":8897,\"uMean\":8366,\"vMin\":-1415,\"vMax\":-627,\"vMean\":-1021,\"rgb\":6107179.95959596,\"type\":0,\"name\":\"RED_BALL\"},\"range\":9.3},{\"name\":\"YELLOW_BALL\",\"parameters\":{\"uMin\":-1633,\"uMax\":-821,\"uMean\":-1227,\"vMin\":-5353,\"vMax\":-4651,\"vMean\":-5002,\"rgb\":10531182.85,\"type\":0,\"name\":\"YELLOW_BALL\"},\"range\":4.2},{\"name\":\"SIG_3\",\"parameters\":{\"uMin\":-51,\"uMax\":51,\"uMean\":0,\"vMin\":-51,\"vMax\":51,\"vMean\":0,\"rgb\":723723.5255319149,\"type\":0,\"name\":\"SIG_3\"},\"range\":2.5},{\"name\":\"SIG_4\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_4\"},\"range\":2.5},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":2.5},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":2.5}],\"codes\":[]}}","isConfigured":"false"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.2","minVersion":"3.0.0","fileFormat":"1.2.0","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}