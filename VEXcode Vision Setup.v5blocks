{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_control_wait\" id=\"Cd!JthFmZdYo=fQ{H,{y\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"FfaA%SxiBviU!`G)V[f]\"><field name=\"NUM\">3</field></shadow></value><next><block type=\"v5_sensing_snapshot\" id=\"V?|nkqEuY51}Nx.|Xu_s\"><field name=\"VISION\">VisionSensor</field><field name=\"SIGNATURE\">RED_CUBE</field><next><block type=\"v5_control_if_then_else\" id=\"y%CH6hmilQP3Hf@kNi6S\"><value name=\"CONDITION\"><block type=\"v5_sensing_object_exists\" id=\"{p0`:jIk9Y})3,dC*4xs\"><field name=\"VISION\">VisionSensor</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_looks_print\" id=\"g=`DJJ2zXV(7`ESBRY.Q\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"text\" id=\"7@#^*DE*SLPSor}Vp2#C\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_sensing_object_count\" id=\"e1VwtlFbm)ziw^3*H@!`\"><field name=\"VISION\">VisionSensor</field></block></value><next><block type=\"v5_looks_next_row\" id=\";Z+o/Urrn(Z8YbU,:9|{\"><field name=\"TARGET\">Brain</field></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"v5_looks_print\" id=\"80en^%X2x6nGQd)gl_zF\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"F)E.?RdzfPO2YdRCD3k6\"><field name=\"TEXT\">I see nothing!</field></shadow></value><next><block type=\"v5_looks_next_row\" id=\":Rd`d9Q(aCuW|cl3BX=h\"><field name=\"TARGET\">Brain</field></block></next></block></statement><next><block type=\"v5_control_wait\" id=\"Gpbu[D0c*8@IN2_@CgGW\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"HFf3cX)#o{;bEXCJ9F6r\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"v5_sensing_snapshot\" id=\"?Cu8jfFbtW$Wp{ghMH9b\"><field name=\"VISION\">VisionSensor</field><field name=\"SIGNATURE\">BLUE_CUBE</field><next><block type=\"v5_control_if_then_else\" id=\"i`!r!mWi%U@(k|)2kxH0\"><value name=\"CONDITION\"><block type=\"v5_sensing_object_exists\" id=\"QhwDel3;Kw5r;9~BNKOh\"><field name=\"VISION\">VisionSensor</field></block></value><statement name=\"SUBSTACK\"><block type=\"v5_looks_print\" id=\"+p[eNc?[{Fn0mRFI9;-7\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"text\" id=\"m#oG|-l%^Vx$#3g#-Z:z\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_sensing_object_count\" id=\"PENjSu8Kgdh!rrAmmTD0\"><field name=\"VISION\">VisionSensor</field></block></value></block></statement><statement name=\"SUBSTACK2\"><block type=\"v5_looks_print\" id=\"s$nXqzDP8Y2|PW^C18)=\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"S[izuk=N~gB5~|AR?q)G\"><field name=\"TEXT\">I see nothing!</field></shadow></value></block></statement><next><block type=\"v5_control_wait\" id=\"hG!ww83e4!T;B.f28$Gq\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"L}$QH+Uv2Z5s?z#b0tGy\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"v5_control_stop_project\" id=\"|Hnr/1*@y[2a{xfqL{KR\"></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[9],"name":"VisionSensor","customName":true,"deviceType":"Vision","deviceClass":"vision","setting":{"config":"{\"config\":{\"brightness\":24,\"signatures\":[{\"name\":\"RED_CUBE\",\"parameters\":{\"uMin\":6883,\"uMax\":9893,\"uMean\":8388,\"vMin\":-2457,\"vMax\":-1023,\"vMean\":-1740,\"rgb\":1,\"type\":0,\"name\":\"RED_CUBE\"},\"range\":1.9},{\"name\":\"GREEN_CUBE\",\"parameters\":{\"uMin\":-2871,\"uMax\":-2185,\"uMean\":-2528,\"vMin\":-3063,\"vMax\":-2139,\"vMean\":-2601,\"rgb\":1,\"type\":0,\"name\":\"GREEN_CUBE\"},\"range\":3.9},{\"name\":\"BLUE_CUBE\",\"parameters\":{\"uMin\":-1737,\"uMax\":-1227,\"uMean\":-1482,\"vMin\":2959,\"vMax\":4161,\"vMean\":3560,\"rgb\":1,\"type\":0,\"name\":\"BLUE_CUBE\"},\"range\":3.1},{\"name\":\"YELLOW_CUBE\",\"parameters\":{\"uMin\":277,\"uMax\":607,\"uMean\":442,\"vMin\":-4681,\"vMax\":-3603,\"vMean\":-4142,\"rgb\":1,\"type\":0,\"name\":\"YELLOW_CUBE\"},\"range\":4.1},{\"name\":\"SIG_5\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_5\"},\"range\":2.5},{\"name\":\"SIG_6\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_6\"},\"range\":2.5},{\"name\":\"SIG_7\",\"parameters\":{\"uMin\":0,\"uMax\":0,\"uMean\":0,\"vMin\":0,\"vMax\":0,\"vMean\":0,\"rgb\":0,\"type\":0,\"name\":\"SIG_7\"},\"range\":3}],\"codes\":[]}}","isConfigured":"false"},"triportSourcePort":22}],"slot":1,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.0","minVersion":"3.0.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\n/*vex-vision-config:begin*/\nvision::signature VisionSensor__RED_CUBE = vision::signature (1, 6883, 9893, 8388,-2457, -1023, -1740,1.9, 0);\nvision::signature VisionSensor__GREEN_CUBE = vision::signature (2, -2871, -2185, -2528,-3063, -2139, -2601,3.9, 0);\nvision::signature VisionSensor__BLUE_CUBE = vision::signature (3, -1737, -1227, -1482,2959, 4161, 3560,3.1, 0);\nvision::signature VisionSensor__YELLOW_CUBE = vision::signature (4, 277, 607, 442,-4681, -3603, -4142,4.1, 0);\nvision::signature VisionSensor__SIG_7 = vision::signature (7, 0, 0, 0,0, 0, 0,3, 0);\nvision VisionSensor = vision (PORT9, 24, VisionSensor__RED_CUBE, VisionSensor__GREEN_CUBE, VisionSensor__BLUE_CUBE, VisionSensor__YELLOW_CUBE, VisionSensor__SIG_7);\n/*vex-vision-config:end*/\n\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  wait(3.0, seconds);\n  VisionSensor.takeSnapshot(VisionSensor__RED_CUBE);\n  if (VisionSensor.objectCount > 0) {\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(VisionSensor.objectCount));\n    Brain.Screen.newLine();\n  }\n  else {\n    Brain.Screen.print(\"I see nothing!\");\n    Brain.Screen.newLine();\n  }\n  wait(5.0, seconds);\n  VisionSensor.takeSnapshot(VisionSensor__BLUE_CUBE);\n  if (VisionSensor.objectCount > 0) {\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(VisionSensor.objectCount));\n  }\n  else {\n    Brain.Screen.print(\"I see nothing!\");\n  }\n  wait(5.0, seconds);\n  vexSystemExitRequest();\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}