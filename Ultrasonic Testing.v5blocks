{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"E@_/KQNnz]$IStV2palt\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">RightCount</variable><variable type=\"\" id=\"4##p,:hEXRNmSn$mMDQ(\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">LeftCount</variable><variable type=\"broadcast_msg\" id=\"Y3=*^f#f|*rB$`Un)T#o\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">message1</variable></variables><comment id=\"i?zt[8HI*]N[Iw0B`%_$\" x=\"695\" y=\"-1509\" h=\"264\" w=\"352\">Project:  Test the bump switches\n              \nAuthor:  John McManus\n\nCreated:07/28/2023\n\nConfiguration:\nV5 Clawbot (Drivetrain 2-motor, Inertial)\nInertial Sensor in Port 2\nClaw Motor in Port 3\nArm Motor in Port 8</comment><block type=\"v5_events_when_started\" id=\"$GlC]8b%EkUOa@tjmF#8\" x=\"90\" y=\"-1370\"><next><block type=\"v5_other_comment\" id=\"dsBe@Sj~OKSWMCSEpuax\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"OO/3|HhW]Y2B|[yghjrO\"><field name=\"comment\">Initialize Drivetrain</field></shadow></value><next><block type=\"v5_sensing_calibrate_drivetrain\" id=\"3/_HL/6|/.4n8ZCFA#)z\"><next><block type=\"v5_motion_set_motor_timeout\" id=\"r5}ye=Jk:bGMgV6pW~W(\"><field name=\"MOTOR\">ArmMotor</field><value name=\"TIMEOUT\"><shadow type=\"math_number\" id=\"$^[kFIm6%s?CogNI$N#b\"><field name=\"NUM\">2</field></shadow></value><next><block type=\"v5_motion_set_motor_position\" id=\"aDagkmFBd86m:]JjF+og\"><field name=\"MOTOR\">ArmMotor</field><field name=\"UNITS\">deg</field><value name=\"DEGS\"><shadow type=\"math_number\" id=\".z7Q!wL7[1#-(IqgJu*W\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"%/?T04+Qv1#.25#S_eZo\"><field name=\"MOTOR\">ArmMotor</field><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"MCJSjG^tJFKTvaHOw%B;\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"M)pDD(9//:Mp/8_Gk^%+\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"K].bAIl!!3_-tg3-IYA(\"><field name=\"NUM\">25</field></shadow></value><next><block type=\"v5_drivetrain_set_turn_velocity\" id=\"yjHo73}m5m51+Xty{WXZ\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"gj3,4{8+bIFCQ0xf!4k*\"><field name=\"NUM\">15</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_stopping\" id=\"rm45YF_R1nN(h$^^PP(!\"><field name=\"MODE\">brake</field><next><block type=\"v5_other_comment\" id=\"E*}*iN#4x^yF?!=~^d-v\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"4W+KCDZT1NzB^J3WGfT-\"><field name=\"comment\">Initialize Display</field></shadow></value><next><block type=\"v5_looks_set_font\" id=\"l)L$ohN:Fu,.7xjS$c5V\"><field name=\"FONT\">mono30</field><next><block type=\"v5_looks_set_pen_color\" id=\"Zw3Q%R|cQbjP)?#F?K=v\"><field name=\"COLOR\">green</field><field name=\"TARGET\">Brain</field><next><block type=\"v5_control_repeat\" id=\"=J8zG~;A84wPF!*hKxe;\"><value name=\"TIMES\"><shadow type=\"math_whole_number\" id=\"7I4K*aU,6V6Dx~cja!6y\"><field name=\"NUM\">2</field></shadow></value><statement name=\"SUBSTACK\"><block type=\"v5_drivetrain_set_drive_heading\" id=\"4?OTz?JBFQ,QRC%tXXtJ\"><value name=\"HEADING\"><shadow type=\"math_number\" id=\"*g[C7~(T3jRLOjUH{Z5L\"><field name=\"NUM\">0</field></shadow></value><next><block type=\"v5_looks_print\" id=\"6kaiLaYb#A[wuC64QJ#+\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"dx|~}^3zRH@8/kLh?I?}\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_sensing_distance_from\" id=\"X$5=/skgTz54z5Arv,x:\"><field name=\"SONAR\">RangeFinderG</field><field name=\"UNITS\">in</field></block></value><next><block type=\"v5_control_while\" id=\"7Z3mB-MA%=45@mlOQsj3\"><value name=\"CONDITION\"><block type=\"v5_operator_greater_than\" id=\"@wnRm!Ob!d{19Sw%,[Yi\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"C9wq%LRf=0Du^4z`OTKk\"><field name=\"NUM\"></field></shadow><block type=\"v5_sensing_distance_from\" id=\"WJ88(zA/F@|jekxd)qgT\"><field name=\"SONAR\">RangeFinderG</field><field name=\"UNITS\">in</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"@NgF4A76C24!HaPc6n/{\"><field name=\"NUM\">12</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"v5_drivetrain_drive\" id=\"fsra72l0M+}H]8D^j|BU\"><field name=\"DIRECTION\">fwd</field></block></statement><next><block type=\"v5_motion_stop_driving\" id=\"d@BPasQ?zj799Y9tq5Cd\"><next><block type=\"v5_looks_next_row\" id=\"DWcBx62*DL/%ONxqQp3$\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_print\" id=\"2tv;z90d`LI=Q|~ZAVW1\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"||jj_LJU8(+hg0-*o8sE\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"v5_sensing_distance_from\" id=\"bQv5`-Z|udj2Y{Zcq!}4\"><field name=\"SONAR\">RangeFinderG</field><field name=\"UNITS\">in</field></block></value><next><block type=\"v5_drivetrain_turn_to_heading\" id=\"%]4D}xE7^u;Qv{ZThf|*\"><field name=\"anddontwait_mutator\">FALSE</field><value name=\"HEADING\"><shadow type=\"math_number\" id=\"iUa3FUk]t=AD_n{Fe|UV\"><field name=\"NUM\">180</field></shadow></value><next><block type=\"v5_control_wait\" id=\"0c6nj8bFHZA#J(*G;QAd\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"{sl+=NX^_#YtI6:OAsij\"><field name=\"NUM\">2</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement><next><block type=\"v5_control_wait\" id=\"12l8CZ|bUt2*XQOyI7/h\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"P`F^^#`9scV}@x^l;p4W\"><field name=\"NUM\">5</field></shadow></value><next><block type=\"v5_motion_spin_for\" id=\"K0q$,;K)EvEXQzSHZV(w\"><field name=\"MOTOR\">ArmMotor</field><field name=\"DIRECTION\">rev</field><field name=\"UNITS\">deg</field><field name=\"anddontwait_mutator\">FALSE</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"G2zoGFW@l.+e~?ea%)^C\"><field name=\"NUM\">45</field></shadow></value><next><block type=\"v5_control_stop_project\" id=\"5sk#-.@}Tk9.E^Nrdya6\"></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1,10,2],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"inertial","width":"295","unit":"mm","wheelbase":"165","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[8],"name":"ArmMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"up","rev":"down","gear":"ratio18_1"},"triportSourcePort":22},{"port":[3],"name":"ClawMotor","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"close","rev":"open","gear":"ratio18_1"},"triportSourcePort":22},{"port":[1],"name":"BumperRight","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[2],"name":"BumperLeft","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[7,8],"name":"RangeFinderG","customName":false,"deviceType":"RangeFinder","deviceClass":"sonar","setting":{},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.5","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT1, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT10, ratio18_1, true);\ninertial DrivetrainInertial = inertial(PORT2);\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, DrivetrainInertial, 319.19, 320, 165, mm, 1);\n\nmotor ArmMotor = motor(PORT8, ratio18_1, false);\n\nmotor ClawMotor = motor(PORT3, ratio18_1, false);\n\nbumper BumperRight = bumper(Brain.ThreeWirePort.A);\nbumper BumperLeft = bumper(Brain.ThreeWirePort.B);\nsonar RangeFinderG = sonar(Brain.ThreeWirePort.G);\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Inertial\");\n  DrivetrainInertial.calibrate();\n  while (DrivetrainInertial.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat RightCount, LeftCount;\n\nevent message1 = event();\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  // Initialize Drivetrain\n  calibrateDrivetrain();\n  ArmMotor.setTimeout(2.0, sec);\n  ArmMotor.setPosition(0.0, degrees);\n  ArmMotor.spinFor(forward, 90.0, degrees, true);\n  Drivetrain.setDriveVelocity(25.0, percent);\n  Drivetrain.setTurnVelocity(15.0, percent);\n  Drivetrain.setStopping(brake);\n  // Initialize Display\n  Brain.Screen.setFont(mono30);\n  Brain.Screen.setPenColor(green);\n  repeat(2) {\n    Drivetrain.setHeading(0.0, degrees);\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(RangeFinderG.distance(inches)));\n    while ((RangeFinderG.distance(inches) > 12.0)) {\n      Drivetrain.drive(forward);\n    wait(5, msec);\n    }\n    Drivetrain.stop();\n    Brain.Screen.newLine();\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(RangeFinderG.distance(inches)));\n    Drivetrain.turnToHeading(180.0, degrees, true);\n    wait(2.0, seconds);\n    wait(5, msec);\n  }\n  wait(5.0, seconds);\n  ArmMotor.spinFor(reverse, 45.0, degrees, true);\n  vexSystemExitRequest();\n  return 0;\n}\n\n\nint main() {\n  // Calibrate the Drivetrain\n  calibrateDrivetrain();\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}