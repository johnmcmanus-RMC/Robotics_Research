{"mode":"Text","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nleft_drive_smart = Motor(Ports.PORT1, GearSetting.RATIO_18_1, False)\nright_drive_smart = Motor(Ports.PORT10, GearSetting.RATIO_18_1, True)\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 319.19, 29, 165, MM, 1)\nDistance = Distance(Ports.PORT20)\nLeftRear = Bumper(brain.three_wire_port.a)\nRightRear = Bumper(brain.three_wire_port.b)\nRightFront = Bumper(brain.three_wire_port.g)\nLeftFront = Bumper(brain.three_wire_port.h)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\nvexcode_brain_precision = 0\nvexcode_console_precision = 0\nmyVariable = 0\nClickCount = 0\n\ndef when_started1():\n    global myVariable, ClickCount, vexcode_brain_precision, vexcode_console_precision\n    # Initialize Drivetrain\n    brain.screen.set_font(FontType.MONO30)\n    brain.screen.set_pen_color(Color.RED)\n    drivetrain.set_stopping(BRAKE)\n    drivetrain.set_drive_velocity(30, PERCENT)\n    drivetrain.set_turn_velocity(25, PERCENT)\n    drivetrain.stop()\n    brain.screen.print(\"Drivetrain Initialized\")\n    brain.screen.next_row()\n    brain.screen.print(Distance.object_distance(MM), precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n    brain.screen.next_row()\n    ClickCount = 0\n    while not ClickCount > 5:\n        wait(5, MSEC)\n    brain.screen.clear_screen()\n    brain.screen.set_cursor(1, 1)\n    brain.screen.set_pen_color(Color.GREEN)\n    brain.screen.print(ClickCount, precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n    wait(3, SECONDS)\n    # stop project not currently supported\n\ndef onevent_LeftRear_pressed_0():\n    global myVariable, ClickCount, vexcode_brain_precision, vexcode_console_precision\n    ClickCount = ClickCount + 1\n    brain.screen.print(\"Left Rear pressed\")\n    brain.screen.next_row()\n    brain.screen.print(ClickCount, precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n    brain.screen.next_row()\n\ndef onevent_RightFront_pressed_0():\n    global myVariable, ClickCount, vexcode_brain_precision, vexcode_console_precision\n    ClickCount = ClickCount + 1\n    brain.screen.print(\"Right Front pressed\")\n    brain.screen.next_row()\n    brain.screen.print(ClickCount, precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n    brain.screen.next_row()\n\ndef onevent_RightRear_pressed_0():\n    global myVariable, ClickCount, vexcode_brain_precision, vexcode_console_precision\n    ClickCount = ClickCount + 1\n    brain.screen.print(\"Right Rear pressed\")\n    brain.screen.next_row()\n    brain.screen.print(ClickCount, precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n    brain.screen.next_row()\n\ndef onevent_LeftFront_pressed_0():\n    global myVariable, ClickCount, vexcode_brain_precision, vexcode_console_precision\n    ClickCount = ClickCount + 1\n    brain.screen.print(\"Left Front pressed\")\n    brain.screen.next_row()\n    brain.screen.print(ClickCount, precision=6 if vexcode_brain_precision is None else vexcode_brain_precision)\n    brain.screen.next_row()\n\n# system event handlers\nLeftRear.pressed(onevent_LeftRear_pressed_0)\nRightFront.pressed(onevent_RightFront_pressed_0)\nRightRear.pressed(onevent_RightRear_pressed_0)\nLeftFront.pressed(onevent_LeftFront_pressed_0)\n# add 15ms delay to make sure events are registered correctly.\nwait(15, MSEC)\n\nwhen_started1()\n","textLanguage":"python","rconfig":[{"port":[1,10,0],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"29","unit":"mm","wheelbase":"165","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[20],"name":"Distance","customName":true,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22},{"port":[1],"name":"LeftRear","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[2],"name":"RightRear","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[7],"name":"RightFront","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[8],"name":"LeftFront","customName":true,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"","minVersion":"3.0.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}