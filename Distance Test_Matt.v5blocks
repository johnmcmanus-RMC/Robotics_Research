{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable></variables><comment id=\"d7Oiit{ZX2ESO4qW}ruw\" x=\"871\" y=\"92\" h=\"248\" w=\"546\">Project: \n3-Wire Rangefinder Sensing\n\nDescription: \nThis example will show all of the available blocks for using the 3-Wire Rangefinder Sensor\n\nConfiguration:  \nV5 Speedbot (Drivetrain 2-motor, No Gyro)\nRangefinder in 3-Wire Ports A B</comment><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_other_comment\" id=\"@J[S*hLNC/Alr;sxGA2F\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"a[@|iA[iAyZFmo^VCe)=\"><field name=\"comment\">Print all Distance sensing values to the screen in an infinite loop</field></shadow></value><next><block type=\"v5_control_forever\" id=\"c8d4tjT*%V?Azy6E*5rQ\"><statement name=\"SUBSTACK\"><block type=\"v5_other_comment\" id=\"T)@V6w-4%!%t7Rb4-5XM\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"c4c/#+M8mjD4-44r]Y0y\"><field name=\"comment\">Clear the screen and set the cursor to top left corner on each loop</field></shadow></value><next><block type=\"v5_looks_clear_all_rows\" id=\"$_v)h^MZ$;7eoH$r0__-\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_set_cursor\" id=\".lyU=*EGHk@DYN3~fW)H\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"8k8G9AL,(y[1%?h=%~@i\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"^Q6Fr!7H8YpnoUJ,NS*v\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\";k5Qx0M.|}w{A1,w?D@3\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"/n!#R15K5lB^,{~uqyvQ\"><field name=\"TEXT\">Found Object?:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"a:@_4S}YW;h)kb3?KqM$\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"text\" id=\"tZ3j#4[J;:Px)ZX!:?nZ\"><field name=\"TEXT\"></field></shadow><block type=\"v5_sensing_object_in_front\" id=\"7U5N$([$A5RJF]8;A6o{\"><field name=\"SONAR\">RangeFinderG</field></block></value><next><block type=\"v5_looks_set_print_precision\" id=\";^/i7mJ7x@$e1GA]MShZ\"><field name=\"PRECISION\">2</field><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_print\" id=\"dl,oeo2p;}=nN+u=kFPD\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"}GD~bNO#[%U72.4n/6tN\"><field name=\"TEXT\">Distance - Inches:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"w6d1x/puk{,ldSL$nI],\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"text\" id=\"6SRD}6O}3s$HUD$_3bA8\"><field name=\"TEXT\"></field></shadow><block type=\"v5_sensing_distance_from\" id=\"OP@4sJZ$T+yvVC%4r8B{\"><field name=\"SONAR\">RangeFinderG</field><field name=\"UNITS\">in</field></block></value><next><block type=\"v5_looks_print\" id=\"+)I-G:Dyz6}6a.-Fr[Ch\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">false</field><value name=\"DATA\"><shadow type=\"text\" id=\"UA}v:{W.9A|BH4HD~3J{\"><field name=\"TEXT\">Distance - MM:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"!o63%s-h.NwIJd$O,rG]\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">true</field><value name=\"DATA\"><shadow xmlns=\"http://www.w3.org/1999/xhtml\" type=\"text\" id=\"NVm=[)KNZFwMRc09Z.q7\"><field name=\"TEXT\"></field></shadow><block type=\"v5_sensing_distance_from\" id=\"j,G5W*v/k?i^k+Y0QSuL\"><field name=\"SONAR\">RangeFinderG</field><field name=\"UNITS\">mm</field></block></value><next><block type=\"v5_other_comment\" id=\"#m!OB0}ANtsj;K`SX:qS\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"^CS:3F2r*z7QV2F`:F@=\"><field name=\"comment\">A brief delay to allow text to be printed without distortion or tearing</field></shadow></value><next><block type=\"v5_control_wait\" id=\"IQVss0[v{y@SUIwnM+xK\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\":Y_]!HxP-xK_g|3[.@+R\"><field name=\"NUM\">0.05</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></xml>","rconfig":[{"port":[1,10,null],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm"},"triportSourcePort":null},{"port":[7,8],"name":"RangeFinderG","customName":false,"deviceType":"RangeFinder","deviceClass":"sonar","setting":{},"triportSourcePort":22}],"slot":2,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.0","minVersion":"3.0.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT1, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT10, ratio18_1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 295, 40, mm, 1);\n\nsonar RangeFinderG = sonar(Brain.ThreeWirePort.G);\n\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  // Print all Distance sensing values to the screen in an infinite loop\n  while (true) {\n    // Clear the screen and set the cursor to top left corner on each loop\n    Brain.Screen.clearScreen();\n    Brain.Screen.setCursor(1, 1);\n    Brain.Screen.print(\"Found Object\\?:\");\n    Brain.Screen.print(\"%s\", RangeFinderG.value() > 0 ? \"TRUE\" : \"FALSE\");\n    Brain.Screen.newLine();\n    Brain_precision = 2;\n    Brain.Screen.print(\"Distance - Inches:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(RangeFinderG.distance(inches)));\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Distance - MM:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(RangeFinderG.distance(mm)));\n    Brain.Screen.newLine();\n    // A brief delay to allow text to be printed without distortion or tearing\n    wait(0.05, seconds);\n  wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}