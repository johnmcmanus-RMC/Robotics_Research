{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_drivetrain_set_drive_velocity\" id=\"UWq7)gpRqx`0Dbj%i4QT\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"D%cn1zF}/i+Hs7U:!)O@\"><field name=\"NUM\">35</field></shadow></value><next><block type=\"v5_drivetrain_set_turn_velocity\" id=\"aS(N$,T%6Rc=Xhm`#O_#\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"e8V{+X;]NLJ42-1{y3ct\"><field name=\"NUM\">25</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_stopping\" id=\"Dsl-`a`s![KlyfM2lA`M\"><field name=\"MODE\">brake</field></block></next></block></next></block></next></block><block type=\"v5_drivetrain_set_drive_velocity\" id=\"Ve#}o$#(rw*%iJVIUf+a\" x=\"470\" y=\"170\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"Kv2Vx7sux.rhC^bPmg$_\"><field name=\"NUM\">35</field></shadow></value><next><block type=\"v5_drivetrain_set_turn_velocity\" id=\"fR*gc*bKQS[zWv]4Ae0S\"><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"Hl5O1cP}Vc-h+FFZ)9Yy\"><field name=\"NUM\">25</field></shadow></value><next><block type=\"v5_drivetrain_set_drive_stopping\" id=\"OS!)nur.j+4^%}KQ_U}v\"><field name=\"MODE\">brake</field><next><block type=\"v5_drivetrain_drive_for\" id=\"e|#Bnl4QYZJ-aj{BJ2n^\"><field name=\"DIRECTION\">fwd</field><field name=\"UNITS\">mm</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"^)sNE|Ug;nB#-?1oE]?K\"><field name=\"NUM\">2000</field></shadow></value><next><block type=\"v5_drivetrain_turn_for\" id=\"=c6|Y-3T$a14Yuv6Yu!g\"><field name=\"TURNDIRECTION\">right</field><field name=\"anddontwait_mutator\">false</field><value name=\"AMOUNT\"><shadow type=\"math_number\" id=\"jHzQ5SASXPs$b#)AdnWF\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_motion_stop_driving\" id=\"vJtxgoAm?nu@NhTvAP8^\"><next><block type=\"v5_control_stop_project\" id=\"uHU_L*+d%cQN@M/,4jwI\"></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[9,10,1,2,0],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"320","unit":"mm","wheelbase":"165","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.2","minVersion":"3.0.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor leftMotorA = motor(PORT9, ratio18_1, false);\nmotor leftMotorB = motor(PORT10, ratio18_1, false);\nmotor_group LeftDriveSmart = motor_group(leftMotorA, leftMotorB);\nmotor rightMotorA = motor(PORT1, ratio18_1, true);\nmotor rightMotorB = motor(PORT2, ratio18_1, true);\nmotor_group RightDriveSmart = motor_group(rightMotorA, rightMotorB);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 320, 165, mm, 1);\n\n\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  Drivetrain.setDriveVelocity(35.0, percent);\n  Drivetrain.setTurnVelocity(25.0, percent);\n  Drivetrain.setStopping(brake);\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}