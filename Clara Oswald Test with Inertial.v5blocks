{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable></variables><comment id=\":T46Q!oLaOjd/c(QB7Jo\" x=\"402\" y=\"-14\" h=\"247\" w=\"432\">Project:  \n              \nAuthor:  \n\nCreated:\n\nConfiguration:\nV5 Speedbot (Drivetrain 2-motor, Inertial)\nInertial Sensor in Port 2</comment><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"-10\" y=\"-10\"><next><block type=\"v5_drivetrain_turn_to_heading\" id=\"~^ZMS|28blDw/JMQ1e8X\"><field name=\"anddontwait_mutator\">false</field><value name=\"HEADING\"><shadow type=\"math_number\" id=\"Rizo#Yp1o4s;^r1`%i8Q\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_control_wait\" id=\"ENLz-/d*zj7vdFQEK6qD\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"5DsJ#gqo2)Hs)f^OsZ!K\"><field name=\"NUM\">2</field></shadow></value><next><block type=\"v5_drivetrain_turn_to_heading\" id=\"kj,G)5DvXgH9.l?6gAu|\"><field name=\"anddontwait_mutator\">false</field><value name=\"HEADING\"><shadow type=\"math_number\" id=\"VNNiMmB:3Etf!xKx-,W9\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_control_wait\" id=\"7h8zYQVA=^3DXLu##s//\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"ua`uCVLEu5v]#7:6v4cS\"><field name=\"NUM\">2</field></shadow></value><next><block type=\"v5_drivetrain_turn_to_heading\" id=\"j^,-L)1OWTIN*My[hdv)\"><field name=\"anddontwait_mutator\">false</field><value name=\"HEADING\"><shadow type=\"math_number\" id=\"BHjJ:sG8TF;mpKJXIHOe\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_control_wait\" id=\"ekZd3$/xGj6J[Qpbi/$d\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"~.W.iWPFv:pWh=#B70Wa\"><field name=\"NUM\">2</field></shadow></value><next><block type=\"v5_drivetrain_turn_to_heading\" id=\"FG1P:gW!;hI,i*E`~@2n\"><field name=\"anddontwait_mutator\">false</field><value name=\"HEADING\"><shadow type=\"math_number\" id=\"!YU8J#sAvf{-gz8;^@IZ\"><field name=\"NUM\">90</field></shadow></value><next><block type=\"v5_control_wait\" id=\"O(wn=;Opy!_Dqe0`?/y}\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"^h6:tpo3)F+Wp16tH+l!\"><field name=\"NUM\">2</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1,10,2],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"inertial","width":"295","unit":"mm","wheelbase":"165","wheelbaseUnit":"mm"},"triportSourcePort":null}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"3.0.2","minVersion":"3.0.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT1, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT10, ratio18_1, true);\ninertial DrivetrainInertial = inertial(PORT2);\nsmartdrive Drivetrain = smartdrive(LeftDriveSmart, RightDriveSmart, DrivetrainInertial, 319.19, 320, 165, mm, 1);\n\n\nvoid calibrateDrivetrain() {\n  wait(200, msec);\n  Brain.Screen.print(\"Calibrating\");\n  Brain.Screen.newLine();\n  Brain.Screen.print(\"Inertial\");\n  DrivetrainInertial.calibrate();\n  while (DrivetrainInertial.isCalibrating()) {\n    wait(25, msec);\n  }\n\n  // Clears the screen and returns the cursor to row 1, column 1.\n  Brain.Screen.clearScreen();\n  Brain.Screen.setCursor(1, 1);\n}\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  Drivetrain.turnToHeading(90.0, degrees, true);\n  wait(2.0, seconds);\n  Drivetrain.turnToHeading(90.0, degrees, true);\n  wait(2.0, seconds);\n  Drivetrain.turnToHeading(90.0, degrees, true);\n  wait(2.0, seconds);\n  Drivetrain.turnToHeading(90.0, degrees, true);\n  wait(2.0, seconds);\n  return 0;\n}\n\n\nint main() {\n  // Calibrate the Drivetrain\n  calibrateDrivetrain();\n\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}