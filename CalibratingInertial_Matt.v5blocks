{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><comment id=\"}%(3{t$?wc_*?/?$60iT\" x=\"834\" y=\"77\" h=\"255\" w=\"430\">Project:\nInertial Sensing\n\nDescription:\nThis example will show all of the available commands for using the Inertial Sensor\n\nConfiguration:\nV5 Speedbot (Drivetrain 2-motor, No Gyro)\nInertial Sensor in Port 2</comment><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"><next><block type=\"v5_looks_print\" id=\"xXf9:R*l(o]%r/VrjTT=\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"]v+7thuPY%]36]BuEGwa\"><field name=\"TEXT\">Calibrating!</field></shadow></value><next><block type=\"v5_sensing_calibrate_gyro\" id=\"|U:p_Wg9fG0,z8r[|S6Y\"><field name=\"GYRO\">Inertial2</field><next><block type=\"v5_control_wait\" id=\"0LKsFsM~*=o]+AztF/{h\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"y?:W5oUn`4]xH+=M2kS7\"><field name=\"NUM\">3</field></shadow></value><next><block type=\"v5_other_comment\" id=\"fM[3*(Jt[K/I}%PR2g$,\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"ud1W|F}egAh8uoh4Ys~/\"><field name=\"comment\">Print all Inertial sensing values to the screen in an infinite loop</field></shadow></value><next><block type=\"v5_control_forever\" id=\"{^cc;]qyTUQ{WbiK}UST\"><statement name=\"SUBSTACK\"><block type=\"v5_other_comment\" id=\"+*a(j.y1~:$dCokYA8l;\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"s~Zx)wA/wigkB`xtn*VE\"><field name=\"comment\">Clear the screen and set the cursor to top left corner on each loop</field></shadow></value><next><block type=\"v5_looks_clear_all_rows\" id=\")XqNq56czxa[nA^?D/xX\"><field name=\"TARGET\">Brain</field><next><block type=\"v5_looks_set_cursor\" id=\"qFg?}[dc`/+sEKC7uTVa\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"Dd7GL8w5S#sJg=MjPT?b\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"b/?*OAACd/4]jZyA4wB9\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_looks_print\" id=\"=*/^ac4?A[c#2IIh+J@j\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"vtdMf$^f0+GULe5DvU5p\"><field name=\"TEXT\">Heading:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"t-PK}]mD.$Xa$Vq(;4N9\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"2y1{#*T_ar6~(gTb`Kt`\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_sensing_heading_of_gyro\" id=\"*u`Wfy,Mu.2KS^bS~u)*\"><field name=\"GYRO\">Inertial2</field></block></value><next><block type=\"v5_looks_print\" id=\"Of_EnP#1blU5xxFb|(Jy\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"WX5MjQ6tu2=EV!d?|}F*\"><field name=\"TEXT\">Rotation:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"u-O`F^=lc9eH#U{.~3_$\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"{BKA,@J`ptoHPpYAES;1\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_sensing_rotation_of_gyro\" id=\"ub0rRpcIG~oE3-zMWx#G\"><field name=\"GYRO\">Inertial2</field></block></value><next><block type=\"v5_looks_print\" id=\"lmO)lUHgIAB0=:#F#XEv\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"uRoTashFj:KUnwB0n2z%\"><field name=\"TEXT\">Orientation - Pitch:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"(F#Lc%dcs03p-+o?wm.y\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"00:ENgU+]~1D1OiYEUor\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_sensing_inertial_orientation\" id=\"mX5R|MHuhS2RJYI;zX5N\"><field name=\"INERTIAL\">Inertial2</field><field name=\"AXIS\">pitch</field></block></value><next><block type=\"v5_looks_print\" id=\"Q.4!aJ`7+]PP28Mlmu8*\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"9]}a8gf~I5p7wI3Xc3Hl\"><field name=\"TEXT\">Orientation - Roll:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"5(U6~mTa7K?igjOnhoj(\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"N47#8K5I#C[X`+`LE]9z\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_sensing_inertial_orientation\" id=\"=pC,mtl!PZoqh5fN5AO}\"><field name=\"INERTIAL\">Inertial2</field><field name=\"AXIS\">roll</field></block></value><next><block type=\"v5_looks_print\" id=\"^]IafCME6,MyW+QqZ(Tq\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"en4=%V@wHs*GF:Jz/w?4\"><field name=\"TEXT\">Orientation - Yaw:</field></shadow></value><next><block type=\"v5_looks_print\" id=\".YUx-TjF.emn6r2;%U%M\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"l74oh-W=,k-pYI[Eqv^y\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_sensing_inertial_orientation\" id=\"d.F]B=g9{fwgfu}#o*@S\"><field name=\"INERTIAL\">Inertial2</field><field name=\"AXIS\">yaw</field></block></value><next><block type=\"v5_looks_print\" id=\"!]7[VYr=gbmPb/7w5`8`\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"zmtWGxg93Vob!XluNR0v\"><field name=\"TEXT\">Gyro Rate - X:</field></shadow></value><next><block type=\"v5_looks_print\" id=\";2bUzhRQBQ$sRF!]X#o7\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"b?57gdm^+38^eD]V6e}m\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_sensing_inertial_gyrorate\" id=\"ZXw_#ebY]P[wX/,t7`bt\"><field name=\"INERTIAL\">Inertial2</field><field name=\"AXIS\">xaxis</field></block></value><next><block type=\"v5_looks_print\" id=\"{Et%i.S9zNqyos~}ZTuV\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"OQaXaYVo~VCM3]Ny016D\"><field name=\"TEXT\">Gyro Rate - Y:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"!.f-sMu@4j-_/Pq]mB:#\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\";|O+)!c1(GA9U%Wq(eL+\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_sensing_inertial_gyrorate\" id=\"WtqiWb+wrQ[8:eBdbZ*k\"><field name=\"INERTIAL\">Inertial2</field><field name=\"AXIS\">yaxis</field></block></value><next><block type=\"v5_looks_print\" id=\"t21aQ{)Tph9P!w41K?k]\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\".f5r[TG*cMwyaq|sjnA~\"><field name=\"TEXT\">Gyro Rate - Z:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"Oy~z?Bv9K2=`R!To**{L\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"S4pi|yQu4WZ8a{wi)_Wl\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_sensing_inertial_gyrorate\" id=\"M0uedCpxc8W$$$sjUgl:\"><field name=\"INERTIAL\">Inertial2</field><field name=\"AXIS\">zaxis</field></block></value><next><block type=\"v5_looks_print\" id=\"^[FIe{lh1B#e9^Qku,:]\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\".PLm6`~5%TXB!:nTl-zm\"><field name=\"TEXT\">Acceleration - X:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"b_zh/b(q`%{lcyO1L8=m\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"*E2Y4]x_,..%o),8~xPU\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_sensing_inertial_acceleration\" id=\"}6@6Q+?{rbFok3x%TYzT\"><field name=\"INERTIAL\">Inertial2</field><field name=\"AXIS\">xaxis</field></block></value><next><block type=\"v5_looks_print\" id=\"4aaN|V=i1n|/}{KDQY51\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"};Xu45V`Teb3M3BG~Z(V\"><field name=\"TEXT\">Acceleration - Y:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"BhXR1vw/5t7LJh}Of.d%\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"(-%_aZ)_u+wvzLZWOCWx\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_sensing_inertial_acceleration\" id=\"6wgJbd{}`ZQ{dE-}1c=*\"><field name=\"INERTIAL\">Inertial2</field><field name=\"AXIS\">yaxis</field></block></value><next><block type=\"v5_looks_print\" id=\"LTmDr80cL,H;PJ%oXW|U\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"*B]%QwHL/8P9`Z=O%-RF\"><field name=\"TEXT\">Acceleration - Z:</field></shadow></value><next><block type=\"v5_looks_print\" id=\"(C!J9DVb|.88B^/?MyF*\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">TRUE</field><value name=\"DATA\"><shadow type=\"text\" id=\"_[J|c^lB=Y9D6fIMvdJd\"><field name=\"TEXT\">Hello</field></shadow><block type=\"v5_sensing_inertial_acceleration\" id=\"VN|}9OeQ0HIP/v1_.*Fe\"><field name=\"INERTIAL\">Inertial2</field><field name=\"AXIS\">zaxis</field></block></value><next><block type=\"v5_other_comment\" id=\"n`.[DFnGbk=),.2Kon]%\"><value name=\"COMMENT\"><shadow type=\"comment_text\" id=\"?/j40?:m1WH-IFh3e8d9\"><field name=\"comment\">A brief delay to allow text to be printed without distortion or tearing</field></shadow></value><next><block type=\"v5_control_wait\" id=\".ycJ_a-r8QSWDr|(+WQ]\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"56ucu=RoJ*2BOQPTA|$x\"><field name=\"NUM\">0.1</field></shadow></value></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1,10,null],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"2-motor","wheelSize":"wheel4in","gear":"ratio18_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm"},"triportSourcePort":null},{"port":[2],"name":"Inertial2","customName":false,"deviceType":"Inertial","deviceClass":"inertial","setting":{},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.5","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor LeftDriveSmart = motor(PORT1, ratio18_1, false);\nmotor RightDriveSmart = motor(PORT10, ratio18_1, true);\ndrivetrain Drivetrain = drivetrain(LeftDriveSmart, RightDriveSmart, 319.19, 295, 40, mm, 1);\n\ninertial Inertial2 = inertial(PORT2);\n\n\n\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0, Console_precision = 0;\n\nfloat myVariable;\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Brain.Screen.print(\"Calibrating!\");\n  Inertial2.startCalibration();\n  while (Inertial2.isCalibrating()) { task::sleep(50); }\n  wait(3.0, seconds);\n  // Print all Inertial sensing values to the screen in an infinite loop\n  while (true) {\n    // Clear the screen and set the cursor to top left corner on each loop\n    Brain.Screen.clearScreen();\n    Brain.Screen.setCursor(1, 1);\n    Brain.Screen.print(\"Heading:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Inertial2.heading(degrees)));\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Rotation:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Inertial2.rotation(degrees)));\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Orientation - Pitch:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Inertial2.orientation(pitch, degrees)));\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Orientation - Roll:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Inertial2.orientation(roll, degrees)));\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Orientation - Yaw:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Inertial2.orientation(yaw, degrees)));\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Gyro Rate - X:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Inertial2.gyroRate(xaxis, dps)));\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Gyro Rate - Y:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Inertial2.gyroRate(yaxis, dps)));\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Gyro Rate - Z:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Inertial2.gyroRate(zaxis, dps)));\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Acceleration - X:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Inertial2.acceleration(xaxis)));\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Acceleration - Y:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Inertial2.acceleration(yaxis)));\n    Brain.Screen.newLine();\n    Brain.Screen.print(\"Acceleration - Z:\");\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(Inertial2.acceleration(zaxis)));\n    Brain.Screen.newLine();\n    // A brief delay to allow text to be printed without distortion or tearing\n    wait(0.1, seconds);\n  wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}